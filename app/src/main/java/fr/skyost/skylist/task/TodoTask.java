package fr.skyost.skylist.task;

import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.PrimaryKey;
import android.graphics.Color;
import android.support.annotation.NonNull;

import org.joda.time.LocalDate;

import fr.skyost.skylist.task.adapter.TodoListAdapterItem;

/**
 * Represents a To-do task.
 */

@Entity(tableName = TodoTask.TABLE_NAME)
public class TodoTask implements TodoListAdapterItem, Comparable<TodoTask> {

	/**
	 * The Room table name.
	 */

	public static final String TABLE_NAME = "tasks";

	/**
	 * Type of this item in the adapter.
	 */

	public static final int ADAPTER_ITEM_TYPE = 0;

	/**
	 * The task ID (auto generated by Room).
	 */

	@PrimaryKey(autoGenerate = true)
	private long id;

	/**
	 * The task description.
	 */

	private String description;

	/**
	 * The task date.
	 */

	private LocalDate date;

	/**
	 * The task color.
	 */

	private int color;

	/**
	 * Creates a new To-do task.
	 *
	 * @param description The task description.
	 */

	@Ignore
	public TodoTask(final String description) {
		this(description, LocalDate.now());
	}

	/**
	 * Creates a new To-do task.
	 *
	 * @param description The task description.
	 * @param date The task date.
	 */

	@Ignore
	public TodoTask(final String description, final LocalDate date) {
		this(description, date, Color.WHITE);
	}

	/**
	 * Creates a new To-do task.
	 *
	 * @param description The task description.
	 * @param date The task date.
	 * @param color The task color.
	 */

	@Ignore
	public TodoTask(final String description, final LocalDate date, final int color) {
		this.description = description;
		this.date = date;
		this.color = color;
	}

	/**
	 * Creates a new To-do task.
	 *
	 * @param id The task ID.
	 * @param description The task description.
	 * @param date The task date.
	 * @param color The task color.
	 */

	public TodoTask(final Long id, final String description, final LocalDate date, final int color) {
		this.id = id;
		this.description = description;
		this.date = date;
		this.color = color;
	}

	/**
	 * Returns the task ID.
	 *
	 * @return The task ID.
	 */

	public Long getId() {
		return id;
	}

	/**
	 * Sets the task ID.
	 *
	 * @param id The task ID.
	 */

	void setId(final Long id) {
		this.id = id;
	}

	/**
	 * Returns the task description.
	 *
	 * @return The task description.
	 */

	public String getDescription() {
		return description;
	}

	/**
	 * Sets the task description.
	 *
	 * @param description task description.
	 */

	public void setDescription(final String description) {
		this.description = description;
	}

	/**
	 * Returns the task date.
	 *
	 * @return The task date.
	 */

	public LocalDate getDate() {
		return date;
	}

	/**
	 * Sets the task date.
	 *
	 * @param date task date.
	 */

	public void setDate(final LocalDate date) {
		this.date = date;
	}

	/**
	 * Returns the task color.
	 *
	 * @return The task color.
	 */

	public int getColor() {
		return color;
	}

	/**
	 * Sets the task color.
	 *
	 * @param color task color.
	 */

	public void setColor(int color) {
		this.color = color;
	}

	@Override
	public int getType() {
		return ADAPTER_ITEM_TYPE;
	}

	@Override
	public int compareTo(@NonNull final TodoTask task) {
		int result = description.toLowerCase().compareTo(task.description.toLowerCase());
		if(result != 0) {
			return result;
		}
		
		result = Integer.compare(color, task.color);
		if(result != 0) {
			return result;
		}
		
		result = date.compareTo(task.date);
		if(result != 0) {
			return result;
		}
		
		return Long.compare(id, task.id);
	}

}